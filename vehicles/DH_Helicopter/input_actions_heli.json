// this file holds all the actions that only this specific vehicle can perform
// ===========================================================================
// the non self-descriptive fields are:
// "onChange":   code to run when the controller position changes     (applies to: buttons, keys, pov hat, axes)
// "onDown":     code to run when the controller becomes pressed down (applies to: buttons, keys, pov hat)
// "onUp":       code to run when the controller is lifted up         (applies to: buttons, keys, pov hat)
// "onRelative": code to run when the controller position changes     (applies to: mouse axis when holding right mouse button)
// "ctx" (defaults to 'vlua'): where the code above ^ must be run. it can be:
//    - vlua for vehicle lua async
//    - elua for engine  lua async
//    - tlua for engine  lua  sync
//    - slua for physics lua async
//    - ui for javascript    async
//    - ts for torquescript   sync
// "isBasic" (defaults to true): whether the binding must show always (true), or only when 'advanced bindings' checkbox is marked (false)
// "isCentered" (defaults to false): whether the axis values will be reported from -1 to +1 (true) or from 0 to +1 (false)
// "order":      helps set the display order in the Controls menu
{
"elevator"           :{"order": 1, "onChange":"input.event('elevator', VALUE, FILTERTYPE)", "isCentered":true, "title": "Cyclic Pitch (axis)", "desc": "Pitch Control (positive = pitch down)." },
"aileron"            :{"order": 2, "onChange":"input.event('aileron', VALUE, FILTERTYPE)", "isCentered":true, "title": "Cyclic Roll (axis)", "desc": "Roll Control (positive = roll right)" },
"collective"         :{"order": 3, "onChange":"electrics.values.collective = VALUE", "title": "Collective (axis)", "desc": "Lift Control.", "isCentered": false },

"collective_increase":{"order": 4, "onChange":"electrics.values.collective_change = VALUE", "title": "Collective Increase", "desc": "Increase Lift" },
"collective_decrease":{"order": 5, "onChange":"electrics.values.collective_change = -VALUE","title": "Collective Decrease", "desc": "Decrease Lift" },

"rudder"             :{"order": 6, "onChange":"input.event('rudder', VALUE, FILTERTYPE)", "isCentered":true, "title": "Torque (axis)", "desc": "Torque (tail) Rotor Control" },

"rudder_left"        :{"order": 7, "onChange":"input.event('rudder', -VALUE, FILTERTYPE)", "title": "Torque Left", "desc": "Yaw left." },
"rudder_right"       :{"order": 8, "onChange":"input.event('rudder', VALUE, FILTERTYPE)", "title": "Torque Right", "desc": "Yaw right." },

"trim_up"            :{"order": 9, "onChange":"input.event('trimChange', VALUE, FILTERTYPE)", "title": "Torque Trim +", "desc": "Trim to yaw right" },
"trim_down"          :{"order": 10,"onChange":"input.event('trimChange', -VALUE, FILTERTYPE)", "title": "Torque Trim -", "desc": "Trim to yaw left" },

"throttle_axis"      :{"order": 11,"onChange":"electrics.values.heli_throttle = VALUE, FILTERTYPE", "isCentered":false, "title": "Throttle (axis)", "desc": "" },
"throttle_increase"  :{"order": 12,"onChange":"electrics.values.throttle_change = VALUE", "title": "Throttle Increase", "desc": "Increase Throttle" },
"throttle_decrease"  :{"order": 13,"onChange":"electrics.values.throttle_change = -VALUE","title": "Throttle Decrease", "desc": "Decrease Throttle" },

"release_rope"       :{"order": 14,"onChange":"electrics.values.rope = VALUE", "title": "Release Rope", "desc": "In case the ropes get eaten up by your rotors when you fly too fast /shrug/" },

"toggle_sight"       :{"order": 15, "onDown":"electrics.values.msight = 1-(electrics.values.msight or 0)", "title": "Activate Weapons", "desc": "Toggle the weapon system" },

"fire"               :{"order": 16, "onChange":"electrics.values.dh_trigger = VALUE", "title": "Trigger", "desc": "Unleash Mayhem!" },
}
